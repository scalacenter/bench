#!/usr/bin/env bash

set -eE

# usage: pull [-n] [-c COMMIT1:COMMIT2] PR
#
# -n             new test session
# -c             commits to test, separated by semicolon
#
# PR             pull request number
#


############# Resolve directory

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

############## Error handling

function report {
  if [ -f "$LOG" ]; then
    content=$(tail -n 20 "$LOG")
  fi

  message="performance test failed:

```
$content
```

Error line number: $1

[check $LOG for more information]"

  ghi comment $PR -m "$message" -- $MONITOR_REPO
}

trap 'report $LINENO' ERR

############## Options
while getopts "c:n" opt; do
  case $opt in
    c)
      COMMITS=$OPTARG
      ;;
    n)
      FRESH="true"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

PR=$1

############## test
cd $PROG_HOME
source bin/config

############# get PR info

output=/tmp/pull-$PR
wget https://api.github.com/repos/$MONITOR_REPO/pulls/$PR -O $output

info=$(cat $output | jq '{ commit: .head.sha, author: .user.login, repo: .head.repo.full_name, branch: .head.ref }')
author=$(echo $info | jq -r '.author' )
last_commit=$(echo $info | jq -r '.commit' )
from_repo=$(echo $info | jq -r '.repo' )
from_branch=$(echo $info | jq -r '.branch' )

if [[ -z $COMMITS ]]; then
  COMMITS="$last_commit"
fi

############ test commits

for origin_commit in $(echo $COMMITS | tr ":" "\n")
do

  bench_script=/tmp/bench-script
  wget https://raw.githubusercontent.com/$MONITOR_REPO/$origin_commit/bin/run-benchmarks.sh -O $bench_script
  scp $bench_script bloop-benchmark-server:~/run-benchmarks.sh
  ssh bloop-benchmark-server "~/run-benchmarks.sh --ref $origin_commit --upload"

done

message="Performance test finished successfully.

Benchmarks is based on merging with master"

ghi comment $PR -m "$message" -- $MONITOR_REPO

