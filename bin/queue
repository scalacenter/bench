#!/usr/bin/env bash

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi


## error

report() {
  message="The job tasked with running benchmarking jobs has exited. Contact administrators to run it again so that benchmarks can keep running."

  ghi comment 865 -m "$message" -- $MONITOR_REPO

  exit 1
}

# trap report INT TERM EXIT
trap report EXIT


## work

cd $PROG_HOME
source bin/config

while true; do
  files=$(ls jobs/*.job 2>/dev/null) # don't use `(jobs/*.job)` for array, it doesn't work in tmux
  total=$(echo $files | wc -w)

  if [ -f stop-queue ]; then
    echo "stop queue"
    trap '' EXIT
    exit 0
  fi

  if [ "$total" != "0" ]; then
    first=$(echo $files | cut -d' ' -f1)  # don't use array, it's buggy
    base=${first%.job}

    mv "$base.job" "$base.running"
    bash "$base.running"

    rc=$?
    if [[ $rc != 0 ]]; then
      mv "$base.running" "$base.fail"
    else
      mv "$base.running" "$base.done"
    fi

  else
    sleep $QUEUE_IDLE_SLEEP
  fi
done
